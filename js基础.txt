JavaScript是一种直译式脚本语言，是一种动态类型，弱类型，基于原型的语言，内置支持类型
数据类型：
        变量：1.变量即在程序运行过程中它的值是允许改变的量
       2.变量必须先创建，后使用
       3.变量的声明叫变量名，变量名命名规范要和标识符相同
操作符：typeof()是判断数据类型的，返回值为数据类型
数字类型：Number    字符串(用引号括起来)：string   布尔类型(两个值true和false)：boolean
分类：
             单目运算符：只对一个数据进行运算    例++，-， ！
             双目运算符：对两个数据进行运算      例+，-，*/
             逻辑运算符：逻辑运算符把语句连接成更复杂的复杂语句     例&&(逻辑与) ||(逻辑或)
运算  
    等号由==表示      非等号=（返回true）   全等号由===表示      非全等号！==   &&（与）||（或）！ （非）
条件语句：表达式在JavaScript中的短语，那么语句就是JavaScript整句或命令，以分号结束
      var语句用来声明一个或多个变量 
       function用来定义函数（1）var f=function(x){return x+1;}将表达式赋值给一个变量
                        (2)function f(x){return x+1;}含有变量名的语句
       条件语句是通过判断指定表达式的值来决定执行还是跳过某些语句
  if:是一种基本的控制语句，他让JavaScript程序可以选择执行路径，更准确的说，就是条件语句
循环语句
       ：就是程序执行的一盒回路，可以让一部分代码重复执行
         在js中有4种循环语句：     while, do/while,  for, for/in
   1.while循环在执行循环体前测试一个条件，如果条件成立则进入循环体，否则跳到循环后的第一条语句
           例     while（条件表达式） {语句组}
   2.do-while先执行一遍循环体，循环体内的语句执行之后再测试一个条件表达式.
          如果表达式成立则继续执行下一轮循环，否则跳到do-while代码段后的第一条语句
           例     do{语句组}while（条件表达式）
         与while的区别：do while不管逻辑条件是否满足都会进行循环体一次，而while和for却不会
          例     for([表达式1]；[表达式2]){语句组；}
   for-in语句是for语句的一个变体，同样是for循环语句for-in通常用于遍历数组
           例    for（n in set){语句组；} 
跳转语句
   bread语句将无条件跳出并结束当前的循环结构
   continue语句的作用是忽略其后的语句并结束此轮循环和开始新的一轮循环
   return语法： return 表达式；语句结束函数执行，返回调用函数，而且把表达式的值作为函数的结果
   label语句是可以添加标签的，标签是由语句前的标识符和冒号组成的：label：statement;
   label标签 ：语法：  标识符：statement
   
函数
  函数就是把完成特定功能的一段代码抽象出来，使之成为程序中的一个独立实体。可以在同一个程序或其他程序中多次重复使用（通过函数名调用
  作用：1.使程序变得更简洁而清晰
     2.有利于程序维护
     3.可以提到程序开发的效率
     4.提高了代码的重要性（复用性）
   内置函数(系统函数，官方函数)是官方提供好的函数，直接使用，如：alert（）
  eval（）：用于计算字符串表达式的值
  isNaN（）：用于验证参数是不是数字，是not a number的意思
  自定义函数（用户根据需求，封装一个函数）
  function关键字定义一个函数
            例  function 函数名（参数1的名字，参数2的名字，...）//函数可以没有形参
         {
                           语句[return 返回值；]//函数可以没有返回值
         }
     形参和 实参：函数的参数跟变量是一样使用的。形参就是在函数定义时，函数名后面的参数，不能用var修饰。实参就是调用时，函数名后面的参数。
     return为函数设置返回值
     函数的参数可以传递多个，使用arguments对象可以判断参数的个数，argument是个数组
  作用域：就是起作用的范围，或者说有效范围
  局部变量：就是定义在函数内部的变量，这个变量只能在函数内部使用，即作用域范围只是函数内部，另外，形参也是局部变量。
  全局变量：就是定义在函数外部的变量，这个变量在任何函数中都有效，即作用域范围是当前文件的任何地方
  递归调用：函数还可以调用自己，称为递归调用
  
数组
     隐形声明方式： 变量=[];var a=[];
     小标从0开始，他的最大值是length属性-1。       length表示数组的长度
     添加push()方法在数组末尾增加一个或多个元素；
     删除使用delete运算符  eg:delete arr[2];
     遍历数组：for循环，   while（）；   for in   1.用于数组的遍历   2.用于对象属性的遍历啥
     一维数组   二维数组   例var arr=[[1,2,3],[4,5,6]];    alert(arr[1][1])
     运用instanceof运算符来判断一个对象是不是数组
     myarr.sort(fun)用于对数组的元素进行排序
     日期对象GMT（Greenwich Mean Time)是格林尼治时间    1970,1,1，0,0,0所过的毫秒数
     创建日期对象 var dataobj=new Data();
     月份 getMonth()  

字符串  
     例    var str="hello javascript";
     var str= String("hello")
     var str = new String("hello")
  charAr():返回字符串某个下标字符
  charCoalAt（）:返回字符串指定的位置的字符的Unicode编码。
  fromCharCode() ：接受一个指定的 Unicode 值，然后返回一个字符串。
  indexof（）：找到字符在字符串中第一次出现的位置，返回值为数字
  round（1.2）:四舍五入         random():返回0-1之间的随机数       max（）:返回值为大的数
  min():返回值为小的数       abs():绝对值         ceil（1.2）：向上取整      floor（1.2）：向下取整
  pow(x,y)：x的y次方    sqrt():开平方
 
BOM
     所有的浏览器都支持window对象。他表示浏览器窗口，是BOM的核心
     倒计时 setTimeout（）:一次性计时器：仅在指定的延迟时间之后触发一次
      setInter（）：间隔性触发计时器：每隔一定的时间间隔就触发一次
     取消一次性计时器clearTimeout（id）方法接收一个由setTimeout（）返回的TD值，该标识要取消的延迟执行代码。
     取消间隔性触发器  clearInterval(id)方法接收一个由setInterval()返回的ID值，该标识要取消的间隔执行代码块。
  confirm()用于显示一带有指定消息和确定及取消按钮的对话框
  Prompt()用于显示可提示用户进行输入的对话框
  location对象包含有关当前URL的信息，是window对象的一部分，可通过window.loaction属性来访问
  Navigator对象包含有关浏览器的信息
  Screen对象包含有关客户端显示屏幕的信息

DOM
    是"Document Object Model"(文档对象模型)的首字母缩写，被视为节点树的HTML
    元素element     属性attr    文本text    注释comments   文档document
    nodeName属性指定节点的节点名称=文本值
    nodevalue：属性设置或返回指定节点的节点值=属性值
    nodetype：属性返回以数字值但会指定节点的节点类型
    getElementById（）方法可返回对拥有指定ID的第一个对象的引用
    gerElementsByName（）方法可返回带有指定名称的对象的集合
    getElementsByTagName() 方法可返回带有指定标签名的对象的集合。
    getElementsByClassName（）返回文档中所有指定类名的元素集合
    innerHtml属性设置或返回标签的开始和结束标签之间的HTML
    outerHtml当前元素的开始标记和结束标记之间的所有文本和HTML标签
    innerText设置或获取位于对象起始和结束标签内的文本 
    outerText设置(包括标签)或获取(不包括标签)对象的文本
    元素属性
    getAttribute（）方法返回指定属性名的属性值
    setAttribute()方法添加指定的属性，并为其赋指定的值。如果这个指定的属性以存在，则仅设置/更改值。
    tagName：返回被选择元素的标签名

事件
    事件流描述的是从页面中接受事件的顺序
    冒泡：IE的事件流叫做事件冒泡，即时间开始是由最具体的元素接受，然后逐级向上传播到较为不具体的节点
    事件捕获：是不太具体的DOM节点赢该更早接收到事件，而最具体的节点应该最后接收到事件
    事件类型：onload:一张页面或一副图像完成加载
       onfocus:事件在对象获得焦点时发生
       onselect:事件会在文本框中的文本被选中时发生
       onchange:事件会在域的内容改变时发生
       onclick：在对象被点击时发生
       点击事件：
       onmouseover:事件会在鼠标指针移动到指定的对象上时发生
       onmouseout:事件会在鼠标指针移出指定的对象时发生
       onmousedown：事件会在鼠标按键被按下时发生
       onmouseup：事件会在鼠标按键被松开时发生。
       onkeydown：事件会在用户按下一个键盘按键时发生。
       onkeyup：事件会在键盘按键被松开时发生。
       onkeypress:事件会在键盘按键被按下并释放一个键时发生。

正则
       测试用户名(必须由字母数字下划线组成)
       用户密码（必须同时包含大小写数字）
       确认密码
       
       正则函数：1.exec（str）匹配返回内容，否则返回null
         2.text（str)匹配返回true，否则返回false
       正则表达式包括3种元素：量词， 元字符， 修饰符
       [a-z]:匹配任何包含小写字母的字符串
       [abc]:匹配abc任何一个
       [a-zA-Zo-9]:匹配任意一个小写大写字母或下划线的字符串
       [^abc]:^在中括号里边，不是外边，表示除了abc都能匹配，字符串为a,b,c组成都不匹配，加上别的字母可匹配
       \d和[0-9]相同，匹配任一个数字
       \D和【^0-9】相同，不匹配任何一个数字，不包括数字即可匹配

 
